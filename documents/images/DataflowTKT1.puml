@startuml
skinparam arrowThickness 2

actor Client as client

participant "HelloController" as controller #LightYellow
participant "HelloService" as helloService #LightBlue
participant "UserDetailServiceImpl" as userDetailsService #LightSkyBlue
participant "HelloRepository" as helloRepo #Pink
participant "CustomPasswordEncoder" as passwordEncoder #PowderBlue
participant "SecurityConfig" as security #Wheat
database "Database" as db #LightGreen

== Greeting Flow ==
client -> controller: GET /
controller -> helloService: greetLearner()
helloService -> helloRepo: Fetch greeting (hardcoded or from DB)
helloRepo --> helloService: Hello Entity (id, message)
helloService --> controller: Hello Entity (decoded message)
controller -> client: HTTP Response (Greeting Message)

== Authentication Flow ==
client -> security: Secured Request with Credentials
security -> userDetailsService: loadUserByUsername(username)
userDetailsService -> passwordEncoder: Encode password
passwordEncoder --> userDetailsService: Encoded password
userDetailsService --> security: UserDetails (Authenticated User)
security -> controller: Authentication Outcome
controller -> client: Response Based on Authentication

== Assignment Handling Flow ==
client -> controller: Fetch Assignment API Request
controller -> helloService: Process Assignment Request
helloService -> db: Query Assignment Table
db --> helloService: Assignment Data
helloService -> controller: AssignmentResponseDto
controller -> client: HTTP Response (Assignment Details)

@enduml

